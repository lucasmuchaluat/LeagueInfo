{"version":3,"sources":["App.js","Champion.js","Itens.js","Summoners.js","Nav.js","serviceWorker.js","index.js"],"names":["App","leagueAPI","require","useState","champions","setChampion","items","setItem","summoners","setSummoner","showChampions","setShowChampions","showItens","setShowItens","showSummoners","setShowSummoners","search","setSearch","REGION","CONSTANTS","init","defaultRegion","BRAZIL","useEffect","lol","getChampions","then","champion","console","log","catch","err","getItems","item","getSummoners","summoner","clean","not_exist_img","i","length","includes","push","filteredChampions","filter","name","toLowerCase","filteredItens","filteredSummoners","className","Jumbotron","href","Button","variant","Form","map","type","key","Check","inline","label","id","onClick","onChange","e","target","value","placeholder","obj","index","OverlayTrigger","placement","overlay","Tooltip","description","to","src","imageUrl","alt","height","width","plaintext","image","full","Champion","match","openAlly","setOpenAlly","openEnemy","setOpenEnemy","params","getChampion","championSpells","spells","championAllytips","allytips","championEnemytips","enemytips","title","lore","trigger","Popover","Title","as","passive","Content","spell","aria-controls","aria-expanded","Collapse","in","Alert","Heading","Itens","getItem","gold","base","sell","Summoners","getSummoner","tooltip","cooldown","Nav","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b64a4ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Button from 'react-bootstrap/Button'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport lol from \"riot-lol\";\r\n\r\nfunction App() {\r\n  const leagueAPI = require('node-league-api');\r\n\r\n  const RIOT_API_KEY = 'RGAPI-1c7b8473-c7ee-4010-acdd-df71ff57e518';\r\n  const [champions, setChampion] = useState();\r\n  const [items, setItem] = useState();\r\n  const [summoners, setSummoner] = useState();\r\n  const [showChampions, setShowChampions] = useState(false);\r\n  const [showItens, setShowItens] = useState(false);\r\n  const [showSummoners, setShowSummoners] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const item_url = \"http://ddragon.leagueoflegends.com/cdn/9.20.1/img/item/\"\r\n  const summoner_url = \"http://ddragon.leagueoflegends.com/cdn/9.20.1/img/spell/\"\r\n\r\n  const REGION = leagueAPI.CONSTANTS.REGION;\r\n\r\n  leagueAPI.init(RIOT_API_KEY, {\r\n    defaultRegion: REGION.BRAZIL\r\n  });\r\n\r\n  useEffect(() => {\r\n    lol\r\n      .getChampions()\r\n      .then(champion => {\r\n        console.log(champion);\r\n        setChampion(champion);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    lol\r\n      .getItems()\r\n      .then(item => {\r\n        console.log(item);\r\n        setItem(item);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    lol\r\n      .getSummoners()\r\n      .then(summoner => {\r\n        console.log(summoner)\r\n        const clean = []\r\n        const not_exist_img = [2, 3, 11, 15, 16]\r\n        for (var i = 0; i < summoner.length; i++) {\r\n          if (!not_exist_img.includes(i)) {\r\n            clean.push(summoner[i])\r\n          }\r\n        }\r\n\r\n        setSummoner(clean);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   lol\r\n  //     .getChampion(\"Aatrox\")\r\n  //     .then(champion => {\r\n  //       console.log(champion);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }, [])\r\n\r\n  if (champions && items && summoners) {\r\n\r\n    const filteredChampions = champions.filter(item => {\r\n      return item.name.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n\r\n    const filteredItens = items.filter(item => {\r\n      return item.name.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n\r\n    const filteredSummoners = summoners.filter(item => {\r\n      return item.name.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n    return (\r\n      <div className=\"App\">\r\n        <Jumbotron>\r\n          <h1>Welcome to LeagueInfo!</h1>\r\n          <h5>\r\n            This is an epic platform designed for League of Legends lovers and made for those who want the best experience in the fields of justice. We are basically a collection of key information to understand this game that has just completed 10 long years.\r\n          </h5>\r\n          <p>\r\n            <a href=\"https://developer.riotgames.com/\"><Button variant=\"primary\">Powered by <strong>Riot API</strong></Button></a>\r\n          </p>\r\n        </Jumbotron>\r\n        <h4>Choose a category below:</h4>\r\n        <Form>\r\n          {['checkbox'].map(type => (\r\n            <div key={`inline-${type}`} className=\"mb-3\">\r\n              <Form.Check inline label=\"Champions\" type={type} id={`inline-${type}-1`} onClick={() => setShowChampions(!showChampions)} />\r\n              <Form.Check inline label=\"Itens\" type={type} id={`inline-${type}-2`} onClick={() => setShowItens(!showItens)} />\r\n              <Form.Check inline label=\"Summoners\" type={type} id={`inline-${type}-3`} onClick={() => setShowSummoners(!showSummoners)} />\r\n            </div>\r\n          ))}\r\n        </Form>\r\n        <input\r\n          type=\"text\"\r\n          onChange={e => setSearch(e.target.value)}\r\n          value={search}\r\n          placeholder=\"Search...\"\r\n        />\r\n        <br></br><br></br>\r\n\r\n\r\n\r\n        <header className=\"Img\">\r\n          {showChampions && filteredChampions.map((obj, index) => {\r\n            return (\r\n              <OverlayTrigger\r\n                key={obj.key}\r\n                placement={\"top\"}\r\n                overlay={\r\n                  <Tooltip id={`tooltip-${\"top\"}`}>\r\n                    {obj.description}\r\n                  </Tooltip>\r\n                }>\r\n                <div>\r\n                  <div>{obj.name}</div>\r\n                  <Link to={`/Champion/${obj.name}`}>\r\n                    <img src={obj.imageUrl} alt={`img ${obj.name}`} height=\"60\" width=\"60\" />\r\n                  </Link>\r\n                </div>\r\n              </OverlayTrigger>\r\n            )\r\n          })\r\n          }\r\n\r\n          {showItens && filteredItens.map((obj, index) => {\r\n            return (\r\n              <OverlayTrigger\r\n                key={obj.id}\r\n                placement={\"top\"}\r\n                overlay={\r\n                  <Tooltip id={`tooltip-${\"top\"}`}>\r\n                    {obj.plaintext}\r\n                  </Tooltip>\r\n                }>\r\n                <div>\r\n                  <div>{obj.name}</div>\r\n                  <Link to={`/Itens/${obj.name}`}>\r\n                    <img src={item_url + obj.image.full} alt={`img ${obj.name}`} height=\"60\" width=\"60\" />\r\n                  </Link>\r\n                </div>\r\n              </OverlayTrigger>\r\n            )\r\n          })\r\n          }\r\n          {showSummoners && filteredSummoners.map((obj, index) => {\r\n            return (\r\n              <OverlayTrigger\r\n                key={obj.id}\r\n                placement={\"top\"}\r\n                overlay={\r\n                  <Tooltip id={`tooltip-${\"top\"}`}>\r\n                    {obj.description}\r\n                  </Tooltip>\r\n                }>\r\n                <div>\r\n                  <div>{obj.name}</div>\r\n                  <Link to={`/Summoners/${obj.name}`}>\r\n                    <img src={summoner_url + obj.image.full} alt={`img ${obj.name}`} height=\"60\" width=\"60\" />\r\n                  </Link>\r\n                </div>\r\n              </OverlayTrigger>\r\n            )\r\n          })\r\n          }\r\n\r\n          {/* <img src={champions[1].imageUrl} className=\"App-logo\" alt=\"logo\" />\r\n          <code>{champions[1].name}</code>\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a> */}\r\n\r\n\r\n        </header>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>Hello world</div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from 'react';\r\nimport lol from \"riot-lol\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Collapse from 'react-bootstrap/Collapse'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Popover from 'react-bootstrap/Popover'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport './Champion.css';\r\n\r\n\r\nfunction Champion({ match }) {\r\n    const [champion, setChampion] = useState();\r\n    const [openAlly, setOpenAlly] = useState(false);\r\n    const [openEnemy, setOpenEnemy] = useState(false);\r\n    const champion_url_loading = \"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/\"\r\n    const champion_url_loading_end = \"_0.jpg\"\r\n    const passive_url = \"http://ddragon.leagueoflegends.com/cdn/9.21.1/img/passive/\"\r\n    const spell_url = \"http://ddragon.leagueoflegends.com/cdn/9.21.1/img/spell/\"\r\n\r\n    useEffect(() => {\r\n        console.log(match.params.id);\r\n        lol\r\n            .getChampion(match.params.id)\r\n            .then(champion => {\r\n                console.log(champion);\r\n                setChampion(champion);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n\r\n    }, []);\r\n\r\n    if (champion) {\r\n\r\n        const championSpells = champion.spells.filter(item => {\r\n            return item;\r\n        });\r\n        const championAllytips = champion.allytips.filter(item => {\r\n            return item;\r\n        });\r\n        const championEnemytips = champion.enemytips.filter(item => {\r\n            return item;\r\n        });\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Jumbotron>\r\n                    <h1>{champion.name}'s page</h1>\r\n                    <p>\r\n                        <Link to={\"/\"}>\r\n                            <Button variant=\"primary\">◄ Home</Button>\r\n                        </Link>\r\n                    </p>\r\n                </Jumbotron>\r\n                <div className=\"container\">\r\n                    <h3>{champion.name}</h3>\r\n                    <h4><i>{champion.title}</i></h4>\r\n                    <img src={champion_url_loading + champion.name + champion_url_loading_end} alt={`img ${champion.name}`} />\r\n                    <h4><sub>Champion Description</sub></h4>\r\n                    <p>{champion.lore}</p>\r\n                    <h4><sub>Champion Passive</sub></h4>\r\n                    <OverlayTrigger\r\n                        trigger=\"hover\"\r\n                        placement={\"bottom\"}\r\n                        overlay={\r\n                            <Popover id={`popover-positioned-${\"bottom\"}`}>\r\n                                <Popover.Title as=\"h3\">{champion.passive.name}</Popover.Title>\r\n                                <Popover.Content>\r\n                                    {champion.passive.description}\r\n                                </Popover.Content>\r\n                            </Popover>\r\n                        }\r\n                    >\r\n                        <div>\r\n                            <div>{champion.passive.name}</div>\r\n                            <img src={passive_url + champion.passive.image.full} alt={`img ${champion.name}`} height=\"50\" width=\"50\" />\r\n                        </div>\r\n                    </OverlayTrigger>\r\n\r\n                    <h4><sub>Champion Habilities</sub></h4>\r\n\r\n                    {championSpells.map((spell, index) => {\r\n                        return (\r\n                            <OverlayTrigger\r\n                                trigger=\"hover\"\r\n                                key={spell.id}\r\n                                placement={\"bottom\"}\r\n                                overlay={\r\n                                    <Popover id={`popover-positioned-${\"bottom\"}`}>\r\n                                        <Popover.Title as=\"h3\">{spell.name}</Popover.Title>\r\n                                        <Popover.Content>\r\n                                            {spell.description}\r\n                                        </Popover.Content>\r\n                                    </Popover>\r\n                                }\r\n                            >\r\n                                <div >\r\n                                    <div>{spell.name}</div>\r\n                                    <img className=\"Habilities\" src={spell_url + spell.image.full} alt={`img ${champion.name}`} height=\"60\" width=\"60\" />\r\n                                </div>\r\n                            </OverlayTrigger>\r\n                        )\r\n                    })\r\n                    }\r\n                    <h4><sub>Champion Tips</sub></h4>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        onClick={() => setOpenAlly(!openAlly)}\r\n                        aria-controls=\"example-collapse-text\"\r\n                        aria-expanded={openAlly}\r\n                    >\r\n                        Ally Tips\r\n                    </Button>\r\n                    <Collapse in={openAlly}>\r\n                        <div id=\"example-collapse-text\">\r\n                            <Alert variant=\"success\">\r\n                                <Alert.Heading>Ally Tips during the game</Alert.Heading>\r\n                                {championAllytips.map((allytips, index) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <hr />\r\n                                            <p className=\"mb-0\">{allytips}</p>\r\n\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => setOpenEnemy(!openEnemy)}\r\n                        aria-controls=\"example-collapse-text\"\r\n                        aria-expanded={openEnemy}\r\n                    >\r\n                        Enemy Tips\r\n                    </Button>\r\n                    <Collapse in={openEnemy}>\r\n                        <div id=\"example-collapse-text\">\r\n                            <Alert variant=\"danger\">\r\n                                <Alert.Heading>Enemy Tips during the game</Alert.Heading>\r\n                                {championEnemytips.map((enemytips, index) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <hr />\r\n                                            <p className=\"mb-0\">{enemytips}</p>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n                            </Alert>\r\n                        </div>\r\n                    </Collapse>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Champion Page</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Champion;","import React, { useState, useEffect } from 'react';\r\nimport lol from \"riot-lol\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Itens({ match }) {\r\n    const [item, setItem] = useState();\r\n    const item_url = \"http://ddragon.leagueoflegends.com/cdn/9.20.1/img/item/\"\r\n\r\n    useEffect(() => {\r\n        console.log(match.params.id);\r\n        lol\r\n            .getItem(match.params.id)\r\n            .then(item => {\r\n                console.log(item);\r\n                setItem(item);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n\r\n    }, []);\r\n    if (item) {\r\n        return (\r\n            <div className=\"App\">\r\n                <Jumbotron>\r\n                    <h1>{item.name}'s page</h1>\r\n                    <p>\r\n                        <Link to={\"/\"}>\r\n                            <Button variant=\"primary\">◄ Home</Button>\r\n                        </Link>\r\n                    </p>\r\n                </Jumbotron>\r\n                <img src={item_url + item.image.full} alt={`img ${item.name}`} height=\"200\" width=\"200\" />\r\n                <h2>{item.plaintext}</h2>\r\n                <br></br>\r\n                <h3>Preço de compra : {item.gold.base}</h3>\r\n                <h3>Preço de venda : {item.gold.sell}</h3>\r\n                <br></br>\r\n                <h3>{item.description}</h3>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Itens Page</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Itens;","import React, { useState, useEffect } from 'react';\r\nimport lol from \"riot-lol\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Summoners({ match }) {\r\n    const [summoner, setSummoner] = useState();\r\n    const summoner_url = \"http://ddragon.leagueoflegends.com/cdn/9.20.1/img/spell/\"\r\n\r\n    useEffect(() => {\r\n        console.log(match.params.id);\r\n        lol\r\n            .getSummoner(match.params.id)\r\n            .then(summoner => {\r\n                console.log(summoner);\r\n                setSummoner(summoner);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n\r\n    }, []);\r\n    if (summoner) {\r\n        return (\r\n            <div className=\"App\">\r\n                <Jumbotron>\r\n                    <h1>{summoner.name}'s page</h1>\r\n                    <p>\r\n                        <Link to={\"/\"}>\r\n                            <Button variant=\"primary\">◄ Home</Button>\r\n                        </Link>\r\n                    </p>\r\n                </Jumbotron>\r\n                <img src={summoner_url + summoner.image.full} alt={`img ${summoner.name}`} height=\"200\" width=\"200\" />\r\n                <h3>{summoner.tooltip}</h3>\r\n                <br></br>\r\n                <h3>Cooldown : {summoner.cooldown} segundos</h3>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Champion Page</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Summoners;","import React from 'react';\r\nimport App from './App';\r\nimport Champion from './Champion';\r\nimport Itens from './Itens';\r\nimport Summoners from './Summoners';\r\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction Nav () {\r\n    return (\r\n        <Router>\r\n        <div>\r\n        <Switch>\r\n        <Route path=\"/\" exact component={App}/>\r\n        <Route path=\"/champion/:id\" component={Champion}/>\r\n        <Route path=\"/itens/:id\" component={Itens}/>\r\n        <Route path=\"/summoners/:id\" component={Summoners}/>\r\n        </Switch>\r\n        </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Nav;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Nav from './Nav';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Nav />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}